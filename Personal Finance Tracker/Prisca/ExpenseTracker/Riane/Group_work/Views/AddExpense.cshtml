@model Group_work.Models.ExpenseTransaction
@{
    ViewBag.Title = "Add Expense";
}

<div class="content-card">
    <h3>Add New Expense</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.Category,
                        new SelectList(new[] { "Rent", "Shopping", "Groceries", "Others" }),
                        "Select Category", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownListFor(model => model.Status,
                        new SelectList(new[] { "Higher", "Lower", "Average" }),
                        "Select Status", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="margin-top: 20px;">
                <div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Save Expense
                    </button>
                    <a href="@Url.Action("Transactions", "Expense")" class="btn btn-default" style="margin-left: 10px;">
                        Cancel
                    </a>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Form validation
            $('form').submit(function () {
                var isValid = true;

                // Check if category is selected
                if (!$('#Category').val()) {
                    alert('Please select a category');
                    isValid = false;
                }

                // Check if price is valid
                var price = $('#Price').val();
                if (!price || isNaN(price) || parseFloat(price) <= 0) {
                    alert('Please enter a valid price');
                    isValid = false;
                }

                // Check if status is selected
                if (!$('#Status').val()) {
                    alert('Please select a status');
                    isValid = false;
                }

                return isValid;
            });
        });
    </script>
}